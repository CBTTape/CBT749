
                   .----------------------------.
                   |      CBT Tape File 183     |
                   |  Index of OSVS238J Member  |
                   '----------------------------'

                    http://gsf-soft.com/Freeware

     ----------------- TSO and ISPF commands -------------------

     CLS       A 5-line "clear screen" command for TSO

     EXECPGM   TSO command - invoke a utility program or compiler
               with an alternate ddname list, as follows:
                  EXECPGM IEV90           +
                    PARM(NOOBJECT,NODECK,NOXREF,NORLD) +
                    SYSIN(TEMPWK2)        +
                    SYSUT1(TEMPWK1)       +
                    SYSLIB(ASMLIB)        +
                    SYSPRINT(ASMH$PRT)    +
                    STEPLIB(LINKLIST)

     INITKSDS  Initialize a KSDS after it's been DEFINE'd

               This program prevents OPEN from failing when
               opening with MACRF=(IN,OUT) or STRNO=2 a KSDS
               that has just been defined.  Can be invoked as
               a batch program, a TSO command, or a sub-routine.

     ------------------ Batch Programs --------------------------

     BLKSIZE2  Scan a PDS and print the size of each block and
               the track balance

               This is a batch program, for people interested
               in what a PDS looks like, from the inside.

     BYPASSNQ  Assembler program.  Scratch or Rename a Data Set
               without SYSDSN ENQ

               BYPASSNQ is a driver that allows you to run any
               utility program (such as IEHPROGM or IDCAMS) and
               bypass dsname ENQ that is normally performed by
               the DYNALLOC, SCRATCH and RENAME SVCs.

     CANMSGCL  Purge current job's held output after a few hours.
               Useful for those jobs that work OK 99% of the time
               (must be authorized)

               Example:

                 //MYJOB    JOB ACCT#,CLASS=A,MSGCLASS=X
                 //COPY1   EXEC PGM=IEBCOPY
                 //...      DD   ...
                 //CONDPURG EXEC PGM=CANMSGCL,PARM=2,
                 //              COND=(0,NE,COPY1)

                 The number in the parm is a number of hours.
                 If the 'COPY1' step ends at 10:28 with a
                 return code equal to zero, the 'CONDPURG' step
                 executes and issues the following command:

                   $TA,T=12.28,'$OJ01234,Q=X,CANCEL'

     CLEANUP   Assembler program.  Automatically searches the MVS
               catalog for non-GDG data sets that will be created
               in subsequent steps of your job and deletes them.

                     //MYJOB   JOB  acct#
                     //*
                     //CLEANUP EXEC PGM=CLEANUP
                     //*
                     //STEP1   EXEC PGM=MYPROG1
                     //OUTDD    DD  DSN=MY.FILE1,DISP=(,CATLG)
                     //STEP2   EXEC PGM=MYPROG2
                     //OUTDD    DD  DSN=MY.FILE2,DISP=(,CATLG)

               Can also be executed as the LAST step of a job to
               delete non-GDG data sets that were created during
               job execution.

     CMDJ      Send a JES2 command with the current job's number
               (must be authorized)

               Example:

                  //PURGEJOB EXEC PGM=CMDJES2,PARM=P

               If the current job's number is JOB01234,
               then the following command is issued:

                     $PJ  01234

     GSFLKED   Front-end to the linkage editor to recover
               from SD37 on SYSLMOD (must be authorized)

               This program may be invoked instead of the DFP
               linkage editor. It calls the linkage editor and,
               if an SD37 abend occurs, calls IEBCOPY to compress
               the SYSLMOD PDS, then calls the linkage editor
               again.

               Another feature of this program is to
               conditionally append a PDS member to SYSLIN,
               if that member exists.

     JOBRLSE   Release a job by number (must be authorized)

               This program issues a $A command to release a job
               previously submitted to JES2 with "TYPRUN=HOLD".

               To prevent "multiple jobs found" conditions,
               this program uses the sub-system interface
               to inquire about the status of homonym jobs.
               Then, it issues a $A command with the job
               number of the first job found in the input
               queue in held status (for example: $A J1234).

               Sample execution JCL:

                 //RLSENEXT EXEC PGM=JOBRLSE,PARM=PAYROL22

     NOTCTLG3  Prolog step to prevent "NOT CATLG 2" and verify
               VSAM data sets

               This program may be executed at the beginning
               of a batch job.  It scans the job's SWA to
               locate JFCBs and does two things:

               1. checks if any non-gdg data set with
                  DISP=(NEW,CATLG) is already cataloged.
                  If it finds at least one (i.e. a "NOT
                  CATLG 2" is about to occur), it issues a
                  message and abends the job

               2. Checks if any VSAM data set has been left
                  in OPEN status by an abending job.  Every
                  data set in this case is opened and closed.
                  The way this condition is detected is quite
                  interesting, look at the code.

     DONTFAIL  Prevent job failure caused by uncataloged data
               sets (ESA only, must be authorized)

               This program has been designed to prevent jobs
               that accept multiple inputs from failing in the
               middle of the night because of a "typo" in a data
               set name.  When DONTFAIL detects that an input
               data set is not cataloged, it converts it to a
               null data set and allows the job to run with
               partial input.

     SYSMOVE   Unload a PDS to a sequential data set in
               IEHMOVE format.

     UNITAFF   Dynamically sets UNIT=AFF for input tape files
               (must be authorized)

               This program was originally designed to reduce
               the number of tape drives used by user-submitted
               SAS steps.  It scans the SWA for the next step
               and changes some of the SIOT's fields to force
               all input tape data sets to the same drive.

               It must be executed immediately before the
               step to process (SAS, SORT, or any other
               program that reads a variable number of tape
               files, one at a time).

               Sample jcl:

                 //UNITAFF EXEC PGM=UNITAFF
                 //STEPLIB  DD  DSN=SYS2.AUTHLIB,DISP=SHR
                 //*
                 //STEP53  EXEC PGM=SAS
                 //OSIN     DD DSN=USER1.X,DISP=SHR
                 //         DD DSN=UPQE.DQE40530(-1),DISP=SHR
                 //OSIN2    DD DSN=UPQR.DQR02150(0),DISP=SHR
                 //OSIN3    DD DSN=USER1.X,DISP=SHR
                 //         DD DSN=UPBG.DBGA0240(-1),DISP=SHR
                 //OSIN4    DD DSN=USER1.X,DISP=SHR
                 //         DD DSN=USER1.YY,DISP=SHR
                 //         DD DSN=UPQR.DQR02140(-1),DISP=SHR

               The program only supports cataloged data sets;
               relative generation numbers are handled
               correctly via the GDGNT.

               Restriction: No distinction is made between 3420,
               3480 or 3490 device types; this will cause
               problems if the input to a step is mixed.


     ------------------ Assembler Macros ------------------------

     BUILDCDE  Make storage allocated with GETMAIN appear as a
               load-module in a dump.

               BUILDCDE uses the "loader" form of IDENTIFY to
               create a major CDE and corresponding XL, then
               issues a LOAD SVC to create an LLE and associate
               the CDE with the current TCB.  Don't worry, you
               don't have to understand how it works to use it.

               EXAMPLE:

                     GETMAIN RU,LV=20000
                     BUILDCDE LENGTH=(0),ADDR=(1),EP=DYNAM20

               The 20K storage area will appear in a dump
               as a load-module called "DYNAM20".

     EASYSORT  Invoke an internal SORT with OPEN/PUT/GET logic

               Allows you to do internal sorts without any
               knowledge of parameter lists or exit routine
               linkage conventions.

               Example:

                         EASYSORT OPEN,
                               FIELDS=(1,22,CH,A),
                               TYPE=F,LENGTH=64,
                               OPTION='EQUALS,RESINV=500K'
                         .     .
                 READ    GET   FILEIN
                         EASYSORT PUT,(1)   pass record to SORT
                         B     READ
                         .     .
                 REWRITE EASYSORT GET,      get sorted record
                               SET=(R3),
                               EODAD=ENDSORT
                         PUT   FILEOUT,(R3)
                         B     REWRITE
                         .     .
                 ENDSORT EASYSORT CLOSE

     GETDIR    Read a directory sequentially with a BPAM DCB

               This macro offers a simple way to read directory
               entries and members with a single BPAM DCB.

     STRING    Provides functions similar to PL/I's
               PUT EDIT or COBOL's STRING.

               This is the only non-IBM macro you need to
               assemble the programs in this file.

               This member contains the macro, a test job,
               and the documentation.


     ---------------------- Miscellaneous -----------------------

     DEFGDGSR  Sub-routine - invokes SVC 26 to define a GDG base

               May be invoked from a COBOL program, like this:

                     05  DSNAME   PIC X(44) VALUE 'MY.DSNAME'.
                     05  GDGLIMIT PIC   999 VALUE 027.

                         CALL 'DEFGDGSR' USING DSNAME,
                                               GDGLIMIT.

     FILLDASD  Asm pgm to fill free DASD space with binary zeroes

     HANDBOOK  Job - Creates an on-line copy of the DATA AREAS
               (aka Debugging Handbook) manuals

               This job assembles macros from SYS1.MACLIB and
               SYS1.AMODGEN and stores the assembly listings
               into PDS members.  It is set up for over 60
               commonly used MVS control blocks (such as CVT,
               TCB, JFCB, etc) and may be easily modified to
               support other ones.

               The assembly listing for each macro is stored
               into the output PDS under the control block
               name.  For example, the assembly listing for
               "IKJTCB" is stored into the "TCB" member.

               To conserve dasd space, the LMCOPY service of
               ISPF/PDF is used to pack the output of the
               assembler.

     TCTDCTR   Sub-routine - Prints the EXCP count for each DD
               in the job step

               May be invoked at the end of a program for
               debugging or tuning purposes.

     TRIMMAC   Job - Creates a reduced-size MACLIB that may be
               used instead of the SYS1.MACLIB/SYS1.AMODGEN
               concatenation to improve the performance of the
               assembler.

               The "TRIMMAC" library is built as follows:

               1. selected macros are read from ddname "SYSLIB",
                  trimmed from PL/AS code and other comment
                  lines, then written to a temporary data set.

               2. the SORT utility is invoked to sort the macros
                  in ascending sequence of their size.

               3. the sorted macros are written to SYSPUNCH
                  as an IEBUPDTE sysin stream.

               4. IEBUPDTE is executed in the last step to
                  load the macros into the "TRIMMAC" library,
                  the smallest macros being loaded first.

               You may customize the member list and the input
               concatenation to add other macros and/or macro
               libraries, as needed.

               Use the "TRIMMAC" library instead of the
               MACLIB/AMODGEN concatenation to assemble a
               program and compare the before/after values for
               the elapsed time, excp count and I/O connect
               time.  Expect savings of 30 to 60 percent when
               "TRIMMAC" is used.

               My "TRIMMAC" PDS is currently allocated as
               follows:

                   UNIT=3390,SPACE=(CYL,(9,,18)),
                   DCB=(RECFM=FB,LRECL=80,BLKSIZE=29720)


